x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
y <- x - mean(x)
y
z <- y*y
z
w*z
w <- c(2, 1, 3, 1)
w*z
W.z
w %*% q
w %*% z
y <- x - 0.3
z < y*y
z <- y*y
w %*% z
y <- x - 0.1471
z <- y * y
w %*% z
y <- x - 1.077
z <- y*y
w %*% z
install.packages("UsingR")
library(UsingR); data(galton);
library(reshape);
install.packages("reshape")
libary(reshape)
library(reshape)
long <- melt(galton)
g <- ggplot(long, aes(x = value, fill=variable))
g <- g + geom_historgram(colour="black", binwidth=1)
g <- g + geom_histogram(colour="black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
beta <- -0.04462
mse <- mean((y-beta*x)^2)
mse
beta <- 0.8263
mse <- mean((y-beta*x)^2)
mse
beta <- -1.713
mse <- mean((y-beta*x)^2)
mse
beta <- 0.59915
mse <- mean((y-beta*x)^2)
mse
data(mtcars)
lm(I(mpg) ~ I (weight), data=mtcars)
View(mtcars)
lm(I(mpg) ~ I(wt), data=mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
sd(x)
q6 <- (x-mean(x))/sd(x)
q6
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x ~ y)
lm( y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm( x ~ x)
library(manipulate)
install.packages(manipulate)
install.packages("manipulate")
install.packages("rCharts")
install.packages("rCharts")
library(manipulate)
View(mtcars)
abline(0, s)
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
source('C:/Study/Coursera2015/Developing Data Products devdataprod-033/Quizzes/q1-1.R')
require(devtools)
install.packages("devtools")
require(rCharts)
require(devtools)
install_github('rCharts', 'ramnathv')
data(iris)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
data(airquality)
View(mtcars)
View(iris)
View(iris)
head(airquality)
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
d <- data.frame(airquality, stringsAsFactors = FALSE)
print d
d
dTable(airquality, sPaginationType = "full_numbers")
require(rcharts)
dTable(airquality, sPaginationType = "full_numbers")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
library(devtools)
library(Rcpp)
install.packages("fPortfolio")
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
shiny::runApp('C:/Data/risk1')
setwd("C:/Data/WealthProjection")
shiny::runApp()
shiny::runApp()
setwd("C:/Data/wealth_projection")
## Title Slide
2. Write using R Markdown
calc_wealth(5, 3, 35)
w <- calc_wealth(5, 3, 35)
source('C:/Data/wealth_projection/tmp.R')
calc_wealth <- function(initWealth, retn, horizon) {
w
/
source('C:/Data/wealth_projection/tmp.R')
calc_wealth(5, 3, 35)
source('C:/Data/wealth_projection/tmp.R')
source('C:/Data/wealth_projection/tmp.R')
source('C:/Data/wealth_projection/tmp.R')
source('C:/Data/wealth_projection/tmp.R')
